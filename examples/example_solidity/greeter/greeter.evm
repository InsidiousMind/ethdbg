    /* "greeter.sol":355:704  contract greeter is mortal {... */
  mstore(0x40, 0x60)
    /* "greeter.sol":518:597  function greeter(string _greeting) public {... */
  jumpi(tag_1, iszero(callvalue))
  0x0
  dup1
  revert
tag_1:
  mload(0x40)
  sub(codesize, bytecodeSize)
  dup1
  bytecodeSize
  dup4
  codecopy
  dup2
  add
  0x40
  mstore
  dup1
  dup1
  mload
  dup3
  add
  swap2
  swap1
  pop
  pop
    /* "greeter.sol":211:221  msg.sender */
  caller
    /* "greeter.sol":203:208  owner */
  0x0
  dup1
    /* "greeter.sol":203:221  owner = msg.sender */
  0x100
  exp
  dup2
  sload
  dup2
  0xffffffffffffffffffffffffffffffffffffffff
  mul
  not
  and
  swap1
  dup4
  0xffffffffffffffffffffffffffffffffffffffff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "greeter.sol":581:590  _greeting */
  dup1
    /* "greeter.sol":570:578  greeting */
  0x1
    /* "greeter.sol":570:590  greeting = _greeting */
  swap1
  dup1
  mload
  swap1
  0x20
  add
  swap1
  tag_6
  swap3
  swap2
  swap1
  jump	// in(tag_7)
tag_6:
  pop
    /* "greeter.sol":518:597  function greeter(string _greeting) public {... */
  pop
    /* "greeter.sol":355:704  contract greeter is mortal {... */
  jump(tag_8)
tag_7:
  dup3
  dup1
  sload
  0x1
  dup2
  0x1
  and
  iszero
  0x100
  mul
  sub
  and
  0x2
  swap1
  div
  swap1
  0x0
  mstore
  keccak256(0x0, 0x20)
  swap1
  0x1f
  add
  0x20
  swap1
  div
  dup2
  add
  swap3
  dup3
  0x1f
  lt
  tag_10
  jumpi
  dup1
  mload
  not(0xff)
  and
  dup4
  dup1
  add
  or
  dup6
  sstore
  jump(tag_9)
tag_10:
  dup3
  dup1
  add
  0x1
  add
  dup6
  sstore
  dup3
  iszero
  tag_9
  jumpi
  swap2
  dup3
  add
tag_11:
  dup3
  dup2
  gt
  iszero
  tag_12
  jumpi
  dup3
  mload
  dup3
  sstore
  swap2
  0x20
  add
  swap2
  swap1
  0x1
  add
  swap1
  jump(tag_11)
tag_12:
tag_9:
  pop
  swap1
  pop
  tag_13
  swap2
  swap1
  jump	// in(tag_14)
tag_13:
  pop
  swap1
  jump	// out
tag_14:
  tag_15
  swap2
  swap1
tag_16:
  dup1
  dup3
  gt
  iszero
  tag_17
  jumpi
  0x0
  dup2
  0x0
  swap1
  sstore
  pop
  0x1
  add
  jump(tag_16)
tag_17:
  pop
  swap1
  jump
tag_15:
  swap1
  jump	// out
tag_8:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x0
  codecopy
  0x0
  return
stop

sub_0: assembly {
        /* "greeter.sol":355:704  contract greeter is mortal {... */
      mstore(0x40, 0x60)
      jumpi(tag_1, lt(calldatasize, 0x4))
      calldataload(0x0)
      0x100000000000000000000000000000000000000000000000000000000
      swap1
      div
      0xffffffff
      and
      dup1
      0x41c0e1b5
      eq
      tag_2
      jumpi
      dup1
      0xcfae3217
      eq
      tag_3
      jumpi
    tag_1:
      0x0
      dup1
      revert
        /* "greeter.sol":286:351  function kill() { if (msg.sender == owner) selfdestruct(owner); } */
    tag_2:
      jumpi(tag_4, iszero(callvalue))
      0x0
      dup1
      revert
    tag_4:
      tag_5
      jump(tag_6)
    tag_5:
      stop
        /* "greeter.sol":627:702  function greet() constant returns (string) {... */
    tag_3:
      jumpi(tag_7, iszero(callvalue))
      0x0
      dup1
      revert
    tag_7:
      tag_8
      jump(tag_9)
    tag_8:
      mload(0x40)
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      dup4
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_10:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:29   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_11
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:93   */
      add
        /* "--CODEGEN--":84:89   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:74   */
      add
        /* "--CODEGEN--":64:70   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:48   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_10)
    tag_11:
        /* "--CODEGEN--":12:26   */
      pop
        /* "--CODEGEN--":3:112   */
      pop
      pop
      pop
      swap1
      pop
      swap1
      dup2
      add
      swap1
      0x1f
      and
      dup1
      iszero
      tag_13
      jumpi
      dup1
      dup3
      sub
      dup1
      mload
      0x1
      dup4
      0x20
      sub
      0x100
      exp
      sub
      not
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
    tag_13:
      pop
      swap3
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "greeter.sol":286:351  function kill() { if (msg.sender == owner) selfdestruct(owner); } */
    tag_6:
        /* "greeter.sol":322:327  owner */
      0x0
      dup1
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "greeter.sol":308:327  msg.sender == owner */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "greeter.sol":308:318  msg.sender */
      caller
        /* "greeter.sol":308:327  msg.sender == owner */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      eq
        /* "greeter.sol":304:348  if (msg.sender == owner) selfdestruct(owner) */
      iszero
      tag_15
      jumpi
        /* "greeter.sol":342:347  owner */
      0x0
      dup1
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "greeter.sol":329:348  selfdestruct(owner) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      selfdestruct
        /* "greeter.sol":304:348  if (msg.sender == owner) selfdestruct(owner) */
    tag_15:
        /* "greeter.sol":286:351  function kill() { if (msg.sender == owner) selfdestruct(owner); } */
      jump	// out
        /* "greeter.sol":627:702  function greet() constant returns (string) {... */
    tag_9:
        /* "greeter.sol":662:668  string */
      tag_16
      jump	// in(tag_17)
    tag_16:
        /* "greeter.sol":687:695  greeting */
      0x1
        /* "greeter.sol":680:695  return greeting */
      dup1
      sload
      0x1
      dup2
      0x1
      and
      iszero
      0x100
      mul
      sub
      and
      0x2
      swap1
      div
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup3
      dup1
      sload
      0x1
      dup2
      0x1
      and
      iszero
      0x100
      mul
      sub
      and
      0x2
      swap1
      div
      dup1
      iszero
      tag_19
      jumpi
      dup1
      0x1f
      lt
      tag_20
      jumpi
      0x100
      dup1
      dup4
      sload
      div
      mul
      dup4
      mstore
      swap2
      0x20
      add
      swap2
      jump(tag_19)
    tag_20:
      dup3
      add
      swap2
      swap1
      0x0
      mstore
      keccak256(0x0, 0x20)
      swap1
    tag_21:
      dup2
      sload
      dup2
      mstore
      swap1
      0x1
      add
      swap1
      0x20
      add
      dup1
      dup4
      gt
      tag_21
      jumpi
      dup3
      swap1
      sub
      0x1f
      and
      dup3
      add
      swap2
    tag_19:
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
        /* "greeter.sol":627:702  function greet() constant returns (string) {... */
      swap1
      jump	// out
        /* "greeter.sol":355:704  contract greeter is mortal {... */
    tag_17:
      0x20
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x0
      dup2
      mstore
      pop
      swap1
      jump	// out

    auxdata: 0xa165627a7a72305820bf3395ee337ee104461c15601f99076125caffbb62efb3030a38e17d9e3900c80029
}
